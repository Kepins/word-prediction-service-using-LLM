from asyncio import sleep

from fastapi import APIRouter, HTTPException
from pydantic import BaseModel

from ..celery_app import inference

router = APIRouter(
    prefix='',
    responses={404: {'description': 'Not found'}},
)


class ResponseModel(BaseModel):
    """Response Model"""

    response: str


@router.put(
    '/',
    summary='Returns next token from LLM',
    description='Returns a next token generated from prompt.',
    response_model=ResponseModel,
)
async def generate_next_token(prompt: str):
    """Returns the next token generated by LLaMA based on the prompt.

    - **prompt**: The prompt text to base the next token generation on.

    Example response:
    - **response**: The next token generated from the prompt.
    """

    from ..main import context
    redis = context["redis"]

    await redis.rpush("PROMPT_QUEUE", prompt)

    inference.apply_async()

    return {"response": "NEXT_TOKEN"}